{"ast":null,"code":"var _jsxFileName = \"/Users/Leandro/trybe-exercices/monitoria/start-react/src/pages/Details.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Details extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchData = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      console.log(this.props);\n\n      try {\n        const fetchCocktail = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const fetchCocktailJson = await fetchCocktail.json();\n        console.log(fetchCocktailJson);\n        this.setState({\n          cocktail: fetchCocktailJson.drinks[0]\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      cocktail: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    const {\n      cocktail\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: cocktail.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cocktail.strDrinkThumb,\n        alt: cocktail.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cocktail.strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Details;","map":{"version":3,"sources":["/Users/Leandro/trybe-exercices/monitoria/start-react/src/pages/Details.jsx"],"names":["React","PropTypes","Details","Component","constructor","fetchData","match","params","id","props","console","log","fetchCocktail","fetch","fetchCocktailJson","json","setState","cocktail","drinks","error","state","componentDidMount","render","strDrink","strDrinkThumb","strInstructions","propTypes","shape","objectOf","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,SAXc,GAWF,YAAY;AACtB,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAA+B,KAAKC,KAA1C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;;AACA,UAAI;AACF,cAAMG,aAAa,GAAG,MAAMC,KAAK,CAAE,4DAA2DL,EAAG,EAAhE,CAAjC;AACA,cAAMM,iBAAiB,GAAG,MAAMF,aAAa,CAACG,IAAd,EAAhC;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,iBAAZ;AACA,aAAKE,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAEH,iBAAiB,CAACI,MAAlB,CAAyB,CAAzB;AADE,SAAd;AAID,OARD,CAQE,OAAMC,KAAN,EAAa;AACbT,QAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD;AACF,KAzBa;;AAEZ,SAAKC,KAAL,GAAY;AACVH,MAAAA,QAAQ,EAAC;AADC,KAAZ;AAGD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,SAAL;AACD;;AAkBDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAe,KAAKG,KAA1B;AACA,wBACE;AAAA,8BACE;AAAA,kBAAKH,QAAQ,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAGN,QAAQ,CAACO,aAApB;AAAoC,QAAA,GAAG,EAAGP,QAAQ,CAACM;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIN,QAAQ,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD;;AArCmC;;AAwCtCvB,OAAO,CAACwB,SAAR,GAAoB;AAClBpB,EAAAA,KAAK,EAAEL,SAAS,CAAC0B,KAAV,CAAgB;AACrBpB,IAAAA,MAAM,EAAEN,SAAS,CAAC2B,QAAV,CAAmB;AACzBpB,MAAAA,EAAE,EAAEP,SAAS,CAAC4B;AADW,KAAnB;AADa,GAAhB,EAIJC;AALe,CAApB;AAQA,eAAe5B,OAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Details extends React.Component {\n  constructor() {\n    super();\n    this.state ={\n      cocktail:[],\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const { match: { params: { id } }} = this.props;\n    console.log(this.props)\n    try {\n      const fetchCocktail = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const fetchCocktailJson = await fetchCocktail.json();\n      console.log(fetchCocktailJson);\n      this.setState({\n        cocktail: fetchCocktailJson.drinks[0],\n      })\n\n    } catch(error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    const { cocktail } = this.state;  \n    return (\n      <>\n        <h1>{cocktail.strDrink}</h1>\n        <img src={ cocktail.strDrinkThumb } alt={ cocktail.strDrink } />\n        <p>{cocktail.strInstructions}</p>\n      </>\n    );\n  } \n}\n\nDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.objectOf({\n      id: PropTypes.string,\n    }),\n  }).isRequired\n};\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}